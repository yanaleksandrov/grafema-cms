(()=>{var __webpack_modules__={"./src/scss/index.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://webpack-starter/./src/scss/index.scss?")},"./src/js/index.js":function(){eval("document.addEventListener( 'alpine:init', () => {\n\n\t/**\n\t * Sticky sidebar\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'sticky', el => {\n\t\tlet style = el.parentElement.currentStyle || window.getComputedStyle(el.parentElement);\n\t\tif (style.position !== 'relative') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet rect  = el.getBoundingClientRect();\n\t\tlet diff  = rect.height - document.scrollingElement.offsetHeight;\n\n\t\tlet paddingTop    = parseInt(style.paddingTop) + 42;\n\t\tlet paddingBottom = parseInt(style.paddingBottom);\n\n\t\tlet lastScroll  = 0;\n\t\tlet bottomPoint = 0;\n\t\tlet value       = 'top: ' + paddingTop + 'px';\n\n\t\tfunction calcPosition() {\n\t\t\tif ( diff > 0 ) {\n\t\t\t\tlet y = document.scrollingElement.scrollTop;\n\t\t\t\t// scroll to down\n\t\t\t\tif ( window.scrollY > lastScroll ) {\n\t\t\t\t\tif (y > diff) {\n\t\t\t\t\t\tbottomPoint = ( diff * -1 - paddingBottom );\n\n\t\t\t\t\t\tvalue = 'top: ' + bottomPoint + 'px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = 'top: ' + ( y * -1 - paddingBottom ) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbottomPoint = bottomPoint + (lastScroll - window.scrollY);\n\t\t\t\t\tif (bottomPoint < paddingTop) {\n\t\t\t\t\t\tvalue = 'top: ' + bottomPoint + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tel.setAttribute('style', 'position: sticky;' + value);\n\n\t\t\tlastScroll = window.scrollY;\n\t\t}\n\n\t\twindow.addEventListener('load', () => calcPosition());\n\t\twindow.addEventListener('scroll', () => calcPosition());\n\t\twindow.addEventListener('resize', () => calcPosition());\n\t});\n\n\t/**\n\t * Disable autocomplete\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'autocomplete', el => {\n\t\tel.setAttribute('readonly', true);\n\t\tel.onfocus = () => setTimeout(() => el.removeAttribute('readonly'), 10);\n\t\tel.onblur  = () => el.setAttribute('readonly', true);\n\t});\n\n\t/**\n\t * Code syntax highlight\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive('highlight', (el, { modifiers }) => {\n\t\tlet lang    = modifiers[0] || 'html',\n\t\t\twrapper = document.createElement('code');\n\n\t\twrapper.classList.add('language-' + lang);\n\t\twrapper.innerHTML = el.innerHTML;\n\n\t\tel.classList.add('line-numbers');\n\t\tel.innerHTML = '';\n\t\tel.setAttribute('data-lang', lang.toUpperCase());\n\t\tel.appendChild(wrapper);\n\t});\n\n\t/**\n\t * Allows to expand and collapse elements using smooth animations.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'collapse', ( el, { modifiers }) => {\n\t\tlet duration = ( ( modifiers, key = 'duration', fallback = 350 ) => {\n\t\t\tif ( modifiers.indexOf( key ) === -1 )\n\t\t\t\treturn fallback;\n\t\t\tconst rawValue = modifiers[modifiers.indexOf(key) + 1];\n\t\t\tif ( !rawValue )\n\t\t\t\treturn fallback;\n\t\t\tif ( key === 'duration' ) {\n\t\t\t\tlet match = rawValue.match(/([0-9]+)ms/);\n\t\t\t\tif ( match )\n\t\t\t\t\treturn match[1];\n\t\t\t}\n\t\t\treturn rawValue;\n\t\t} )( modifiers ) / 1e3;\n\t\tlet floor = 0;\n\t\tif ( !el._x_isShown ) {\n\t\t\tel.style.height = `${floor}px`;\n\t\t\tel.style.overflow = 'hidden';\n\t\t\tel.hidden = true;\n\t\t}\n\t\tlet setFunction = ( el2, styles ) => {\n\t\t\tlet revertFunction = Alpine.setStyles( el2, styles );\n\t\t\treturn styles.height ? () => {} : revertFunction;\n\t\t}\n\t\tlet transitionStyles = {\n\t\t\toverflow: 'hidden',\n\t\t\ttransitionProperty: 'height',\n\t\t\ttransitionDuration: `${duration}s`,\n\t\t\ttransitionTimingFunction: 'cubic-bezier(0.4, 0.0, 0.2, 1)'\n\t\t}\n\t\tel._x_transition = {\n\t\t\tin(\n\t\t\t\tbefore = () => {},\n\t\t\t\tafter = () => {}\n\t\t\t) {\n\t\t\t\tel.hidden = false;\n\t\t\t\tlet current = el.getBoundingClientRect().height;\n\t\t\t\tAlpine.setStyles( el, {\n\t\t\t\t\tdisplay: null,\n\t\t\t\t\theight: 'auto'\n\t\t\t\t} );\n\t\t\t\tlet full = el.getBoundingClientRect().height;\n\t\t\t\tAlpine.setStyles( el, {\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} );\n\t\t\t\tif ( current === full ) {\n\t\t\t\t\tcurrent = floor;\n\t\t\t\t}\n\t\t\t\tAlpine.transition( el, Alpine.setStyles, {\n\t\t\t\t\tduring: transitionStyles,\n\t\t\t\t\tstart: {\n\t\t\t\t\t\theight: current + 'px'\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\theight: full + 'px'\n\t\t\t\t\t}\n\t\t\t\t}, () => el._x_isShown = true, () => {\n\t\t\t\t} )\n\t\t\t},\n\t\t\tout(\n\t\t\t\tbefore = () => {},\n\t\t\t\tafter = () => {}\n\t\t\t) {\n\t\t\t\tlet full = el.getBoundingClientRect().height;\n\t\t\t\tAlpine.transition( el, setFunction, {\n\t\t\t\t\tduring: transitionStyles,\n\t\t\t\t\tstart: {\n\t\t\t\t\t\theight: full + 'px'\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\theight: floor + 'px'\n\t\t\t\t\t}\n\t\t\t\t}, () => {\n\t\t\t\t}, () => {\n\t\t\t\t\tel._x_isShown = false;\n\t\t\t\t\tif ( el.style.height === `${floor}px` ) {\n\t\t\t\t\t\tAlpine.nextTick( () => {\n\t\t\t\t\t\t\tAlpine.setStyles( el, {\n\t\t\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tel.hidden = true;\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t};\n\t} )\n\n\t/**\n\t * Copy data to clipboard.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic( 'copy', el => subject => {\n\t\twindow.navigator.clipboard.writeText(subject).then(\n\t\t\t() => {\n\t\t\t\tlet classes = 'ph-copy ph-check'.split(' ');\n\n\t\t\t\tclasses.forEach(s => el.classList.toggle(s));\n\t\t\t\tsetTimeout( () => classes.forEach(s => el.classList.toggle(s)), 1000 )\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconsole.log( 'Oops, your browser is not support clipboard!' );\n\t\t\t}\n\t\t);\n\t});\n\n\t/**\n\t * Countdown magic\n\t *\n\t * @since 1.0\n\t */\n\tlet seconds = 0, isCountingDown = false;\n\tAlpine.magic( 'countdown', () => {\n\t\treturn {\n\t\t\tstart: (initialSeconds, processCallback, endCallback) => {\n\t\t\t\tif (isCountingDown) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tseconds = initialSeconds;\n\t\t\t\tisCountingDown = true;\n\t\t\t\tfunction countdown() {\n\t\t\t\t\tprocessCallback && processCallback(true);\n\t\t\t\t\tif (seconds === 0) {\n\t\t\t\t\t\tendCallback && endCallback(true);\n\t\t\t\t\t\tisCountingDown = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseconds--;\n\t\t\t\t\t\tsetTimeout(countdown, 1000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcountdown();\n\t\t\t},\n\t\t\tsecond: seconds,\n\t\t};\n\t});\n\n\t/**\n\t * Selfie\n\t *\n\t * @since 1.0\n\t */\n\tlet stream = null;\n\tAlpine.magic( 'stream', () => {\n\t\treturn {\n\t\t\tcheck(refs) {\n\t\t\t\tlet canvas = refs.canvas,\n\t\t\t\t\tvideo  = refs.video,\n\t\t\t\t\timage  = refs.image;\n\n\t\t\t\tif (!canvas) {\n\t\t\t\t\tconsole.error('Canvas element is undefined');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!video) {\n\t\t\t\t\tconsole.error('Video for selfie preview is undefined');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!image) {\n\t\t\t\t\tconsole.error('Image for output selfie is undefined');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tisVisible(element) {\n\t\t\t\tconst styles = window.getComputedStyle(element);\n\t\t\t\tif (styles) {\n\t\t\t\t\treturn !(styles.visibility === 'hidden' || styles.display === 'none' || parseFloat(styles.opacity) === 0);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstart(refs) {\n\t\t\t\tlet video = refs.video;\n\t\t\t\tconst observer = new MutationObserver( mutations => {\n\t\t\t\t\tfor (let mutation of mutations) {\n\t\t\t\t\t\tif (mutation.target === document.body && !stream ) {\n\t\t\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\t\t\tif (this.isVisible(video)) {\n\t\t\t\t\t\t\t\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\t\t\t\t\t\t\t\t\tvideo.srcObject = stream = await navigator.mediaDevices.getUserMedia({video: true});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconsole.error('The browser does not support the getUserMedia API');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tobserver.observe(document, {childList: true,subtree: true,attributes: true});\n\t\t\t},\n\t\t\tsnapshot(refs) {\n\t\t\t\tthis.check(refs);\n\t\t\t\tthis.start(refs);\n\n\t\t\t\tlet canvas = refs.canvas,\n\t\t\t\t\tvideo  = refs.video,\n\t\t\t\t\timage  = refs.image;\n\n\t\t\t\tlet width  = video.offsetWidth,\n\t\t\t\t\theight = video.offsetHeight;\n\n\t\t\t\tlet imageStyles = window.getComputedStyle(image),\n\t\t\t\t\timageWidth  = parseInt(imageStyles.width, 10),\n\t\t\t\t\timageHeight = parseInt(imageStyles.height, 10);\n\n\t\t\t\tcanvas.width  = imageWidth;\n\t\t\t\tcanvas.height = imageHeight;\n\n\t\t\t\tlet offsetTop  = ( height - imageHeight ) / 2,\n\t\t\t\t\toffsetLeft = ( width - imageWidth ) / 2;\n\n\t\t\t\tlet ctx = canvas.getContext('2d');\n\n\t\t\t\tctx.imageSmoothingQuality = 'low';\n\n\t\t\t\tlet scale = height / imageHeight;\n\t\t\t\tconsole.log((offsetTop + offsetLeft) / 2)\n\t\t\t\t//ctx.drawImage(video, 0, 0, width * 2, height * 2, 0, 0, width, height);\n\t\t\t\t//ctx.drawImage(video, 0, 0, imageWidth, imageHeight);\n\t\t\t\tctx.drawImage(video, offsetLeft * 1.5, offsetTop * 1.5, height * 1.5, height * 1.5, 0, 0, imageWidth, imageHeight);\n\n\t\t\t\tlet imageData = canvas.toDataURL('image/png');\n\t\t\t\tif ( imageData ) {\n\t\t\t\t\timage.src = imageData;\n\t\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\t}\n\t\t\t\treturn imageData;\n\t\t\t},\n\t\t\tstop() {\n\t\t\t\tif (stream) {\n\t\t\t\t\tstream.getTracks().forEach(track => track.stop());\n\t\t\t\t}\n\t\t\t\tstream = null;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Smooth scrolling to the anchor\n\t * TODO: придостижении верха страницы, удалять анкор, то же при загрузке старницы\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'anchor', ( el, { value, expression, modifiers }, { evaluateLater, cleanup } ) => {\n\t\tlet hash   = window.location.hash.replace( '#', '' ),\n\t\t\tanchor = el.innerText.toLowerCase().replaceAll( ' ', '-' );\n\n\t\t// scroll when init page\n\t\tif ( hash && hash === anchor ) {\n\t\t\tel.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t})\n\t\t}\n\n\t\t// click for copy url with hash\n\t\tel.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\twindow.location.hash = anchor;\n\t\t\tel.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t})\n\t\t}, false )\n\n\t\t// watch the appearance of an anchor on the page and automatically add it to url\n\t\tlet evaluate = evaluateLater( expression || null );\n\t\tlet observer = new IntersectionObserver( ( entries ) => {\n\t\t\tentries.forEach( entry => {\n\t\t\t\tif ( ! entry.isIntersecting || entry.intersectionRatio !== 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevaluate();\n\t\t\t\twindow.location.hash = anchor;\n\t\t\t});\n\t\t}, {\n\t\t\tthreshold: 0.5\n\t\t} );\n\t\tobserver.observe(el);\n\t\tcleanup(() => observer.disconnect());\n\t} )\n\n\t/**\n\t * Listen audio\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'listen', ( el, { value, expression, modifiers }, { evaluateLater, effect } ) => {\n\t\tconsole.log(el)\n\t\tconsole.log(value)\n\t\tconsole.log(expression)\n\t\tconsole.log(modifiers)\n\t\tif ( ! expression ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet evaluate = evaluateLater( expression )\n\t\teffect( () => {\n\t\t\tevaluate( content => {\n\t\t\t\tif ( content ) {\n\t\t\t\t\tlet name = \"listen-node\";\n\n\t\t\t\t\tfunction _play( aud, icn ) {\n\t\t\t\t\t\ticn.classList.add(\"playing\");\n\t\t\t\t\t\taud.play();\n\t\t\t\t\t\taud.setAttribute( \"data-playing\", \"true\" );\n\t\t\t\t\t\taud.addEventListener(\"ended\", function() {\n\t\t\t\t\t\t\t_pause( aud, icn );\n\t\t\t\t\t\t\taud.parentNode.style.background = null;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction _pause( aud, icn ) {\n\t\t\t\t\t\taud.pause();\n\t\t\t\t\t\taud.setAttribute( \"data-playing\", \"false\" );\n\t\t\t\t\t\ticn.classList.remove(\"playing\");\n\t\t\t\t\t}\n\n\t\t\t\t\tlet aud, icn;\n\t\t\t\t\tlet css = document.createElement(\"style\");\n\t\t\t\t\tcss.type = \"text/css\";\n\t\t\t\t\tcss.innerHTML = \".listen-node {display: inline-block; background:rgba(0, 0, 0, 0.05); padding: 1px 8px 2px; border-radius:3px; cursor: pointer;} .listen-node i {font-size: 0.65em; border: 0.5em solid transparent; border-left: 0.75em solid; display: inline-block; margin-right: 2px;margin-bottom: 1px;} .listen-node .playing { border: 0; border-left: 0.75em double; border-right: 0.5em solid transparent; height: 1em;}\";\n\t\t\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(css);\n\n\t\t\t\t\taud = document.createElement( 'audio' );\n\t\t\t\t\ticn = document.createElement( 'i' );\n\n\t\t\t\t\taud.src = el.getAttribute( \"data-src\" );\n\t\t\t\t\taud.setAttribute( \"data-playing\", \"false\" );\n\n\t\t\t\t\tel.id = name + \"-\" + i;\n\t\t\t\t\tel.insertBefore( icn, el.firstChild );\n\t\t\t\t\tel.appendChild( aud );\n\n\t\t\t\t\tdocument.addEventListener( 'click', e => {\n\t\t\t\t\t\tlet aud, elm, icn;\n\t\t\t\t\t\tif ( e.target.className === name ) {\n\t\t\t\t\t\t\taud = e.target.children[1];\n\t\t\t\t\t\t\telm = e.target;\n\t\t\t\t\t\t\ticn = e.target.children[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( e.target.parentElement && e.target.parentElement.className === name ) {\n\t\t\t\t\t\t\taud = e.target.parentElement.children[1];\n\t\t\t\t\t\t\telm = e.target.parentElement;\n\t\t\t\t\t\t\ticn = e.target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (aud && elm && icn) {\n\t\t\t\t\t\t\taud.srt = parseInt( elm.getAttribute( 'data-start' ) ) || 0;\n\t\t\t\t\t\t\taud.end = parseInt( elm.getAttribute( 'data-end' ) ) || aud.duration;\n\n\t\t\t\t\t\t\tif ( aud && aud.getAttribute( \"data-playing\" ) === \"false\" ) {\n\t\t\t\t\t\t\t\tif ( aud.srt > aud.currentTime || aud.end < aud.currentTime ) {\n\t\t\t\t\t\t\t\t\taud.currentTime = aud.srt;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_play( aud, icn );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_pause( aud, icn );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t(function loop() {\n\t\t\t\t\t\t\t\tlet d = requestAnimationFrame( loop );\n\t\t\t\t\t\t\t\tlet percent = (((aud.currentTime - aud.srt) * 100) / (aud.end - aud.srt));\n\t\t\t\t\t\t\t\tpercent = percent < 100 ? percent : 100;\n\t\t\t\t\t\t\t\telm.style.background = \"linear-gradient(to right, rgba(0, 0, 0, 0.1)\" + percent + \"%, rgba(0, 0, 0, 0.05)\" + percent + \"%)\";\n\n\t\t\t\t\t\t\t\tif ( aud.end < aud.currentTime ) {\n\t\t\t\t\t\t\t\t\t_pause( aud, icn );\n\t\t\t\t\t\t\t\t\tcancelAnimationFrame( d );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tel.addEventListener( 'click', () => {\n\n\t\t\t\t\t}, false )\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t} )\n\n\t/**\n\t * Automatically adjust the height of the textarea while typing.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'textarea', ( el, { expression } ) => {\n\t\tif ( 'TEXTAREA' !== el.tagName.toUpperCase() ) {\n\t\t\treturn false;\n\t\t}\n\t\tel.addEventListener( 'input', () => {\n\t\t\tlet max  = parseInt(expression) || 99,\n\t\t\t\trows = parseInt( el.value.split( /\\r|\\r\\n|\\n/ ).length );\n\t\t\tif ( rows > max ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet styles  = getComputedStyle( el, null ),\n\t\t\t\tborder  = parseInt( styles.getPropertyValue( 'border-width' ) ) * 4;\n\n\t\t\tel.style.height = 'auto';\n\t\t\tel.style.height = ( el.scrollHeight + border + 4 ) + 'px';\n\t\t}, false );\n\t});\n\n\t/**\n\t * Tooltips\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'tooltip', ( el, { value, expression, modifiers }, { evaluateLater, effect } ) => {\n\t\tlet evaluate = evaluateLater(expression);\n\t\teffect(() => {\n\t\t\tevaluate( content => {\n\t\t\t\tlet position, trigger;\n\t\t\t\tif (modifiers) {\n\t\t\t\t\tmodifiers.forEach( modifier => {\n\t\t\t\t\t\tposition = [ 'top', 'right', 'bottom', 'left' ].includes( modifier ) ? modifier : 'top';\n\t\t\t\t\t\ttrigger  = [ 'hover', 'click' ].includes( modifier ) ? modifier : 'hover';\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (position && trigger) {\n\t\t\t\t\tnew Drooltip({\n\t\t\t\t\t\telement: el,\n\t\t\t\t\t\ttrigger: trigger,\n\t\t\t\t\t\tposition: position,\n\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\tcolor: 'var(--core-dark)',\n\t\t\t\t\t\tanimation: 'bounce',\n\t\t\t\t\t\tcontent: content || null,\n\t\t\t\t\t\tcallback: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t/**\n\t * Multistep\n\t *\n\t * @since 1.0\n\t * @see based on https://github.com/glhd/alpine-wizard\n\t */\n\tAlpine.directive(\"wizard\", (el, { value, expression, modifiers }, { Alpine: Alpine2, evaluate, cleanup }) => {\n\t\tconst wizard2 = getWizard(el, Alpine2);\n\t\tconst step = wizard2.getStep(el);\n\t\tcleanup(() => step.cleanup());\n\t\tconst evaluateCheck = () => [!!evaluate(expression), {}];\n\t\tAlpine2.effect(() => {\n\t\t\tstep.evaluate = content => evaluate(content);\n\t\t\tif (expression !== \"\") {\n\t\t\t\tif (value === \"step\") {\n\t\t\t\t\tconst [passes, errors] = evaluateCheck();\n\t\t\t\t\tstep.is_complete = passes;\n\t\t\t\t\tstep.errors = errors;\n\t\t\t\t}\n\t\t\t\tif (value === \"action\") {\n\t\t\t\t\tstep.action = expression;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value === \"if\") {\n\t\t\t\tstep.is_applicable = evaluateCheck()[0];\n\t\t\t}\n\t\t\tif (value === \"title\") {\n\t\t\t\tif (modifiers.includes(\"dynamic\")) {\n\t\t\t\t\tstep.title = `${evaluate(expression)}`;\n\t\t\t\t} else {\n\t\t\t\t\tstep.title = expression;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\tAlpine.magic('wizard', (el, { Alpine: Alpine2 }) => {\n\t\treturn getWizard(el, Alpine2);\n\t});\n\tlet wizards = new WeakMap();\n\tlet getWizard = (el, Alpine) => {\n\t\tconst root = Alpine.closestRoot(el);\n\t\tif (!wizards.has(root)) {\n\t\t\twizards.set(root, initWizardRoot(Alpine));\n\t\t}\n\t\treturn wizards.get(root);\n\t};\n\tlet initWizardRoot = (Alpine) => {\n\t\treturn Alpine.reactive({\n\t\t\tsteps: [],\n\t\t\tcurrent_index: 0,\n\t\t\tprogress() {\n\t\t\t\tlet current = 0;\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tfor (let index = 0; index < this.steps.length; index++) {\n\t\t\t\t\tconst step = this.steps[index];\n\t\t\t\t\tif (!step.is_applicable) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttotal++;\n\t\t\t\t\tif (index <= this.current_index) {\n\t\t\t\t\t\tcurrent++;\n\t\t\t\t\t}\n\t\t\t\t\tif (index <= this.current_index && step.is_complete) {\n\t\t\t\t\t\tcomplete++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttotal,\n\t\t\t\t\tcomplete,\n\t\t\t\t\tcurrent,\n\t\t\t\t\tincomplete: total - complete,\n\t\t\t\t\tprogress: `${Math.floor(current / total * 100)}%`,\n\t\t\t\t\tcompletion: `${Math.floor(complete / total * 100)}%`,\n\t\t\t\t\tpercentage: Math.floor(complete / total * 100)\n\t\t\t\t};\n\t\t\t},\n\t\t\tcurrent() {\n\t\t\t\treturn this.steps[this.current_index] || { el: null, title: null };\n\t\t\t},\n\t\t\tprevious() {\n\t\t\t\treturn this.steps[this.previousIndex()] || { el: null, title: null };\n\t\t\t},\n\t\t\tnext() {\n\t\t\t\treturn this.steps[this.nextIndex()] || { el: null, title: null };\n\t\t\t},\n\t\t\tpreviousIndex() {\n\t\t\t\treturn findNextIndex(this.steps, this.current_index, -1);\n\t\t\t},\n\t\t\tnextIndex() {\n\t\t\t\treturn findNextIndex(this.steps, this.current_index, 1);\n\t\t\t},\n\t\t\tisStep(index) {\n\t\t\t\tif (!Array.isArray(index)) {\n\t\t\t\t\tindex = [index]\n\t\t\t\t}\n\t\t\t\treturn index.includes(this.current_index);\n\t\t\t},\n\t\t\tisFirst() {\n\t\t\t\treturn this.previousIndex() === null;\n\t\t\t},\n\t\t\tisNotFirst() {\n\t\t\t\treturn !this.isFirst();\n\t\t\t},\n\t\t\tisLast() {\n\t\t\t\treturn this.nextIndex() === null;\n\t\t\t},\n\t\t\tisNotLast() {\n\t\t\t\treturn !this.isLast();\n\t\t\t},\n\t\t\tisCompleted() {\n\t\t\t\treturn this.current().is_complete && this.nextIndex() === null;\n\t\t\t},\n\t\t\tisUncompleted() {\n\t\t\t\treturn !this.isCompleted();\n\t\t\t},\n\t\t\tgoNext() {\n\t\t\t\tthis.goTo(this.nextIndex());\n\t\t\t},\n\t\t\tcanGoNext() {\n\t\t\t\treturn this.current().is_complete && this.nextIndex() !== null;\n\t\t\t},\n\t\t\tcannotGoNext() {\n\t\t\t\treturn !this.canGoNext();\n\t\t\t},\n\t\t\tgoBack() {\n\t\t\t\tthis.goTo(this.previousIndex());\n\t\t\t},\n\t\t\tcanGoBack() {\n\t\t\t\treturn this.previousIndex() !== null;\n\t\t\t},\n\t\t\tcannotGoBack() {\n\t\t\t\treturn !this.canGoBack();\n\t\t\t},\n\t\t\tgoTo(index) {\n\t\t\t\tif (index !== null && this.steps[index] !== void 0) {\n\t\t\t\t\tthis.current_index = index;\n\n\t\t\t\t\tlet action = this.steps[index].action || '';\n\t\t\t\t\tif (action) {\n\t\t\t\t\t\tthis.steps[index].evaluate(action);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.current();\n\t\t\t},\n\t\t\tgetStep(el) {\n\t\t\t\tlet step = this.steps.find((step2) => step2.el === el);\n\t\t\t\tif (!step) {\n\t\t\t\t\tel.setAttribute(\"x-show\", \"$wizard.current().el === $el\");\n\t\t\t\t\tstep = Alpine.reactive({\n\t\t\t\t\t\tel,\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tis_applicable: true,\n\t\t\t\t\t\tis_complete: true,\n\t\t\t\t\t\terrors: {},\n\t\t\t\t\t\tcleanup: () => {\n\t\t\t\t\t\t\tthis.steps = this.steps.filter((step2) => step2.el === el);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.steps.push(step);\n\t\t\t\t}\n\t\t\t\treturn step;\n\t\t\t}\n\t\t});\n\t};\n\tlet findNextIndex = (steps, current, direction = 1) => {\n\t\tfor (let index = current + direction; index >= 0 && index < steps.length; index += direction) {\n\t\t\tif (steps[index] && steps[index].is_applicable) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t * Ajax\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic( 'ajax', el => (route, appendage) => {\n\t\tlet formData  = new FormData(),\n\t\t\tsubmitBtn = el.querySelector(\"[type='submit']\");\n\n\t\treturn new Promise(resolve => {\n\t\t\tswitch (el.tagName) {\n\t\t\t\tcase 'FORM':\n\t\t\t\t\tformData = new FormData(el);\n\t\t\t\t\tlet inputs = el.querySelectorAll(\"input[type='file']\");\n\t\t\t\t\t[...inputs].forEach(input => {\n\t\t\t\t\t\tlet files = input.files;\n\t\t\t\t\t\tfiles && [...files].forEach((file, index) => formData.append(index, file));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TEXTAREA':\n\t\t\t\tcase 'SELECT':\n\t\t\t\tcase 'INPUT':\n\t\t\t\t\tif (el.type === 'file' && el.files) {\n\t\t\t\t\t\tArray.from(el.files).forEach((file, index) => formData.append(index, file));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.name && formData.append(el.name, el.value);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (appendage) {\n\t\t\t\tfor (const [key, value] of Object.entries(appendage)) {\n\t\t\t\t\tformData.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (submitBtn) {\n\t\t\t\tObject.assign(submitBtn.style, {\n\t\t\t\t\t\"background-image\": \"url(\\\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Z' stroke='%23fff' stroke-opacity='.35' stroke-width='2'/%3E%3Cpath d='M15 8a7 7 0 0 0-7-7' stroke='%23fff' stroke-width='2'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 8 8' to='360 8 8' dur='0.5s' repeatCount='indefinite'/%3E%3C/path%3E%3C/svg%3E\\\")\",\n\t\t\t\t\t\"background-repeat\": \"no-repeat\",\n\t\t\t\t\t\"background-position\": \"center center\",\n\t\t\t\t\t\"background-size\": \"16px\",\n\t\t\t\t\t\"pointer-events\": \"none\",\n\t\t\t\t\t\"color\": \"transparent\",\n\t\t\t\t\t\"transition\": \"none\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet method  = el.getAttribute('method')?.toUpperCase() ?? 'POST';\n\t\t\tlet request = new XMLHttpRequest();\n\n\t\t\trequest.withCredentials = true;\n\t\t\trequest.responseType    = 'json';\n\n\t\t\trequest.open(method, index.apiurl + route);\n\t\t\trequest.send(formData);\n\n\t\t\trequest.upload.onprogress = event => {\n\t\t\t\tconsole.log(`Progress ${parseInt(event.loaded / event.total * 100)}%`);\n\t\t\t}\n\n\t\t\trequest.onprogress = event => {\n\t\t\t\tconsole.log(`Progress ${parseInt(event.loaded / event.total * 100)}%`);\n\t\t\t}\n\n\t\t\trequest.onreadystatechange = event => {\n\t\t\t\tlet data = request.response?.data;\n\t\t\t\tif (data) {\n\t\t\t\t\tdocument.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent(route, {\n\t\t\t\t\t\t\tdetail: { data, event, el, resolve },\n\t\t\t\t\t\t\tbubbles: true,\n\t\t\t\t\t\t\t// Allows events to pass the shadow DOM barrier.\n\t\t\t\t\t\t\tcomposed: true,\n\t\t\t\t\t\t\tcancelable: true\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tsubmitBtn && submitBtn.removeAttribute('style');\n\t\t\t};\n\t\t});\n\t});\n\n\t/**\n\t * Notifications system\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic( 'notice', ( el, { Alpine } ) => {\n\t\treturn {\n\t\t\titems: [],\n\t\t\tnotify( message ) {\n\t\t\t\tthis.items.push( message )\n\t\t\t}\n\t\t}\n\t} )\n\tAlpine.store( 'notice', {\n\t\titems: {},\n\t\tduration: 4000,\n\t\tsetDuration( duration ) {\n\t\t\tthis.duration = parseInt(duration) || 4000;\n\t\t},\n\t\tinfo( message ) {\n\t\t\tthis.notify( message, 'info' );\n\t\t},\n\t\tsuccess( message ) {\n\t\t\tthis.notify( message, 'success' );\n\t\t},\n\t\twarning( message ) {\n\t\t\tthis.notify( message, 'warning' );\n\t\t},\n\t\terror( message ) {\n\t\t\tthis.notify( message, 'error' );\n\t\t},\n\t\tloading( message ) {\n\t\t\tthis.notify( message, 'loading' );\n\t\t},\n\t\tclose( id ) {\n\t\t\tif ( typeof this.items[id] !== 'undefined' ) {\n\t\t\t\tthis.items[id].selectors.push( 'hide' );\n\t\t\t\t//var height = ( e.target.offsetHeight + parseInt( window.getComputedStyle( e.target ).getPropertyValue( 'margin-top' ) ) ) * -1;\n\n\t\t\t\t//e.target.style.setProperty( '--top', height + 'px' );\n\t\t\t\t//e.target.style.setProperty( '--ms',  notice.time + 'px' );\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tdelete this.items[id];\n\t\t\t\t}, 1000 )\n\t\t\t}\n\t\t},\n\t\tnotify( message, type ) {\n\t\t\tif ( message ) {\n\t\t\t\tlet animationName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\ttimestamp     = Date.now();\n\t\t\t\tthis.items[timestamp] = {\n\t\t\t\t\tanim: `url(\"data:image/svg+xml;charset=UTF-8,%3csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cstyle%3ecircle %7b animation: ${this.duration}ms ${animationName} linear;%7d%40keyframes ${animationName} %7bfrom%7bstroke-dasharray:0 70%7dto%7bstroke-dasharray:70 0%7d%7d%3c/style%3e%3ccircle cx='12' cy='12' r='11' stroke='%23000' stroke-opacity='.2' stroke-width='2'/%3e%3c/svg%3e\")`,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tclosable: true,\n\t\t\t\t\tselectors: [ type || 'info' ],\n\t\t\t\t\tclasses() {\n\t\t\t\t\t\treturn this.selectors.map( x => 'notice__item--' + x ).join(' ')\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tsetTimeout( () => this.close(timestamp), this.duration );\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * Password\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic('password', () => {\n\t\treturn {\n\t\t\tmin: {\n\t\t\t\tlowercase: 2,\n\t\t\t\tuppercase: 2,\n\t\t\t\tspecial: 2,\n\t\t\t\tdigit: 2,\n\t\t\t\tlength: 12\n\t\t\t},\n\t\t\tvalid: {\n\t\t\t\tlowercase: false,\n\t\t\t\tuppercase: false,\n\t\t\t\tspecial: false,\n\t\t\t\tdigit: false,\n\t\t\t\tlength: false\n\t\t\t},\n\t\t\tcharsets: {\n\t\t\t\tlowercase: 'abcdefghijklmnopqrstuvwxyz',\n\t\t\t\tuppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\t\t\t\tspecial: '!@#$%^&*(){|}~',\n\t\t\t\tdigit: '0123456789'\n\t\t\t},\n\t\t\tswitch(value) {\n\t\t\t\treturn !(!!value);\n\t\t\t},\n\t\t\tcheck(value) {\n\t\t\t\tlet matchCount = 0;\n\t\t\t\tlet totalCount = 0;\n\n\t\t\t\tfor (const charset in this.charsets) {\n\t\t\t\t\tlet requiredCount = this.min[charset],\n\t\t\t\t\t\tcharsetRegex  = new RegExp(`[${this.charsets[charset]}]`, 'g'),\n\t\t\t\t\t\tcharsetCount  = (value.match(charsetRegex) || []).length;\n\t\t\t\t\tmatchCount += Math.min(charsetCount, requiredCount);\n\t\t\t\t\ttotalCount += requiredCount;\n\n\t\t\t\t\tthis.valid[charset] = charsetCount >= requiredCount;\n\t\t\t\t}\n\n\t\t\t\tif (value.length >= this.min.length) {\n\t\t\t\t\tmatchCount += 1;\n\t\t\t\t\ttotalCount += 1;\n\t\t\t\t\tthis.valid.length = value.length >= this.min.length;\n\t\t\t\t}\n\n\t\t\t\treturn Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tprogress: totalCount === 0 ? totalCount : (matchCount / totalCount) * 100,\n\t\t\t\t\t},\n\t\t\t\t\tthis.valid\n\t\t\t\t)\n\t\t\t},\n\t\t\tgenerate() {\n\t\t\t\tlet password = '';\n\t\t\t\tlet types = Object.keys(this.charsets);\n\n\t\t\t\ttypes.forEach(type => {\n\t\t\t\t\tlet count   = Math.max(this.min[type], 0),\n\t\t\t\t\t\tcharset = this.charsets[type];\n\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tlet randomIndex = Math.floor(Math.random() * charset.length);\n\t\t\t\t\t\tpassword += charset[randomIndex];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\twhile (password.length < this.min.length) {\n\t\t\t\t\tlet randomIndex = Math.floor(Math.random() * types.length),\n\t\t\t\t\t\tcharType    = types[randomIndex],\n\t\t\t\t\t\tcharset     = this.charsets[charType],\n\t\t\t\t\t\trandomCharIndex = Math.floor(Math.random() * charset.length);\n\t\t\t\t\tpassword += charset[randomCharIndex];\n\t\t\t\t}\n\t\t\t\tthis.check(password);\n\n\t\t\t\treturn this.shuffle(password);\n\t\t\t},\n\t\t\tshuffle(password) {\n\t\t\t\tlet array = password.split('');\n\t\t\t\tlet currentIndex = array.length;\n\t\t\t\tlet temporaryValue, randomIndex;\n\n\t\t\t\twhile (currentIndex !== 0) {\n\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\tcurrentIndex -= 1;\n\n\t\t\t\t\ttemporaryValue = array[currentIndex];\n\t\t\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\t\t\tarray[randomIndex] = temporaryValue;\n\t\t\t\t}\n\n\t\t\t\treturn array.join('');\n\t\t\t},\n\t\t}\n\t});\n\n\t/**\n\t * Avatar\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data('avatar', () => ({\n\t\tcontent: '',\n\t\timage: '',\n\t\tadd(event, callback) {\n\t\t\tlet file = event.target.files[0];\n\t\t\tif (file) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.onload = e => {\n\t\t\t\t\tthis.image = e.target.result;\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t},\n\t\tremove() {\n\t\t\tlet root  = this.$el.closest('[x-data]'),\n\t\t\t\tinput = root && root.querySelector('input[type=\"file\"]');\n\t\t\tif (input) {\n\t\t\t\tinput.value = '';\n\t\t\t}\n\t\t\tthis.image = '';\n\t\t},\n\t\tgetInitials( string, letters = 2 ) {\n\t\t\tconst wordArray = string.split(' ').slice( 0, letters );\n\t\t\tif ( wordArray.length >= 2 ) {\n\t\t\t\treturn wordArray.reduce( ( accumulator, currentValue ) => `${accumulator}${currentValue[0].charAt(0)}`.toUpperCase(), '' );\n\t\t\t}\n\t\t\treturn wordArray[0].charAt(0).toUpperCase();\n\t\t},\n\t}));\n\n\t/**\n\t * Datepicker\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data( 'datepicker', () => ( {\n\t\trun: ( elem, opts ) => {\n\t\t\t//console.log(elem);\n\n\t\t\t// see option https://wwilsman.github.io/Datepicker.js/#methods\n\t\t\t//console.log( new Date('2018-07-22') );\n\t\t\topts = Object.assign( {}, {\n\t\t\t\tinline: true,\n\t\t\t\tmultiple: false,\n\t\t\t\tranged: true,\n\t\t\t\ttime: true,\n\t\t\t\tlang: 'ru',\n\t\t\t\tmonths: 2,\n\t\t\t\ttimeAmPm: false,\n\t\t\t\t/*min: (function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\treturn date.setDate( date.getDate() - 200);\n\t\t\t\t})(),\n\t\t\t\tmax: (function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\treturn date.setDate(date.getDate() + 405);\n\t\t\t\t})(),*/\n\t\t\t\twithin: false,\n\t\t\t\twithout: false,\n\t\t\t\tyearRange: 5,\n\t\t\t\tweekStart: 1,\n\t\t\t\t/* defaultTime: {\n\t\t\t\t\tstart: [12, 0],\n\t\t\t\t\tend: [12, 0]\n\t\t\t\t}, */\n\t\t\t}, opts );\n\n\t\t\t//var datepicker = new Datepicker(elem,opts);\n\t\t\t//var datepicker = new Datepicker( elem, opts );\n\t\t\t//console.log( datepicker );\n\t\t}\n\t} ) );\n\n\t/**\n\t * Validation by field `type`, `regexp` or `mask`.\n\t * This function are use `vanillaTextMask` library.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data( 'mask', () => ( {\n\t\trun: mask => {\n\t\t\tlet elem = this.$el;\n\t\t\tif( typeof mask === 'undefined' ) {\n\t\t\t\tlet type = elem.getAttribute( 'type' );\n\t\t\t\tif( type ) {\n\t\t\t\t\tlet exp = '';\n\t\t\t\t\t// validation based on the field type\n\t\t\t\t\tswitch( type ) {\n\t\t\t\t\t\tcase 'tel':\n\t\t\t\t\t\t\texp = /[^ \\-()+\\d]/g;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\texp = /[^.-\\d]/g;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\texp = /[^ a-zA-Z(),\\d]/g;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// TODO: validate domains and subdomains\n\t\t\t\t\t\t// @see https://stackoverflow.com/questions/26093545/how-to-validate-domain-name-using-regex\n\t\t\t\t\t\tcase 'domain':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// removing forbidden characters\n\t\t\t\t\tif ( exp ) {\n\t\t\t\t\t\telem.value = elem.value.replace( exp, '' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if( mask === Object( mask ) ) {\n\t\t\t\telem.value = elem.value.replace( mask, '' );\n\t\t\t}\n\t\t\t/**\n\t\t\t * Validation by mask.\n\t\t\t *\n\t\t\t * @see discussion //javascript.ru/forum/dom-window/82008-kak-preobrazovat-stroku-v-massiv.html\n\t\t\t */\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tfunction limit( position, symbol, max ) {\n\t\t\t\t\t\tlet pos = position;\n\n\t\t\t\t\t\tmax = max.toString();\n\t\t\t\t\t\tif( mask.charAt( --pos ) === symbol ) {\n\t\t\t\t\t\t\tif( elem.value.charAt( pos ) === max.charAt(0) ) {\n\t\t\t\t\t\t\t\treturn new RegExp( '[0-' + max.charAt(1) + ']' );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn /\\d/;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn new RegExp( '[0-' + max.charAt(0) + ']' );\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maskArr  = mask.match( /(\\{[^}]+?\\})|(.)/g ),\n\t\t\t\t\t\t//var maskArr  = mask.match( /(\\{[^\\s]+\\})|(\\+)|([()])|(.)|(\\s+)/g ),\n\t\t\t\t\t\tposition = -1;\n\t\t\t\t\tmaskArr = maskArr.map( function( symbol ) {\n\t\t\t\t\t\t++position;\n\t\t\t\t\t\tswitch( symbol ) {\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn limit( position, symbol, 59 );\n\t\t\t\t\t\t\tcase 'H':\n\t\t\t\t\t\t\t\treturn limit( position, symbol, 23 );\n\t\t\t\t\t\t\tcase 'D':\n\t\t\t\t\t\t\t\treturn limit( position, symbol, 31 );\n\t\t\t\t\t\t\tcase 'M':\n\t\t\t\t\t\t\t\treturn limit( position, symbol, 12 );\n\t\t\t\t\t\t\tcase 'Y': case '0':\n\t\t\t\t\t\t\t\treturn /\\d/;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif( /\\{[^}]+?\\}/.test( symbol ) ) {\n\t\t\t\t\t\t\t\t\treturn new RegExp( symbol.slice( 2, -2 ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn symbol;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t//console.log( maskArr );\n\t\t\t\t\tvanillaTextMask.maskInput( {\n\t\t\t\t\t\tinputElement: elem,\n\t\t\t\t\t\tguide: false,\n\t\t\t\t\t\tmask: maskArr,\n\t\t\t\t\t} );\n\t\t\t\t} catch( e ) {\n\t\t\t\t\tconsole.error( 'Error: check the library connection, \"vanillaTextMask\" is not defined. Details: https:://github.com/text-mask/text-mask' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} ) );\n\n\t/**\n\t * An accessible dialog window: modal, alert, dialog, popup\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic( 'modal', el => {\n\t\treturn {\n\t\t\topen: ( id, animation ) => {\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tlet modal = document.getElementById( id );\n\t\t\t\t\tif( modal ) {\n\t\t\t\t\t\tmodal.classList.add( 'is-active', animation || 'fade' );\n\t\t\t\t\t}\n\t\t\t\t\tdocument.body.style.overflow = 'hidden';\n\t\t\t\t}, 25 );\n\t\t\t},\n\t\t\tclose: animation => {\n\t\t\t\tlet modal = el.closest( '.modal' );\n\t\t\t\tif( modal !== null && modal.classList.contains( 'is-active' ) ) {\n\t\t\t\t\tmodal.classList.remove( 'is-active', animation || 'fade' );\n\t\t\t\t\tdocument.body.style.overflow = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Progress bar\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.directive( 'progress', (el, {modifiers}) => {\n\t\tnew IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach(entry => {\n\t\t\t\tif(entry.isIntersecting) {\n\t\t\t\t\tlet [value = 100, from = 0, to = 100, duration = '0ms'] = modifiers;\n\n\t\t\t\t\tlet start = parseInt(from) / parseInt(value) * 100;\n\t\t\t\t\tlet end   = parseInt(to) / parseInt(value) * 100;\n\n\t\t\t\t\tif (start > end) {\n\t\t\t\t\t\t[ end, start ] = [ start, end ];\n\t\t\t\t\t}\n\n\t\t\t\t\tel.style.setProperty('--core-progress', ( start < 0 ? 0 : start ) + '%');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tel.style.setProperty('--core-transition', ' width ' + duration);\n\t\t\t\t\t\tel.style.setProperty('--core-progress', ( end > 100 ? 100 : end ) + '%');\n\t\t\t\t\t}, 500)\n\n\t\t\t\t\t// apply progress just once\n\t\t\t\t\tobserver.unobserve(el);\n\t\t\t\t}\n\t\t\t});\n\t\t}).observe(el);\n\t});\n\n\t/**\n\t * Advanced select dropdown based on SlimSelect library.\n\t *\n\t * @see   https://github.com/brianvoe/slim-select\n\t * @since 1.0\n\t */\n\tAlpine.directive('select', (el, { expression }) => {\n\t\tconst settings = {\n\t\t\tshowSearch: false,\n\t\t\thideSelected: false,\n\t\t\tcloseOnSelect: true,\n\t\t};\n\n\t\tif (el.hasAttribute('multiple')) {\n\t\t\tsettings.hideSelected = true;\n\t\t\tsettings.closeOnSelect = false;\n\t\t}\n\n\t\tconst custom = JSON.parse(expression || '{}');\n\t\tif (typeof custom === 'object') {\n\t\t\tObject.assign(settings, custom);\n\t\t}\n\n\t\ttry {\n\t\t\tnew SlimSelect({\n\t\t\t\tsettings,\n\t\t\t\tselect: el,\n\t\t\t\tdata: Array.from(el.options).reduce((acc, option) => {\n\t\t\t\t\tlet image       = option.getAttribute('data-image'),\n\t\t\t\t\t\ticon        = option.getAttribute('data-icon'),\n\t\t\t\t\t\tdescription = option.getAttribute('data-description') || '';\n\n\t\t\t\t\tlet images       = image ? `<img src=\"${image}\" alt />` : '',\n\t\t\t\t\t\ticons        = icon ? `<i class=\"${icon}\"></i>` : '',\n\t\t\t\t\t\tdescriptions = description ? `<span class=\"ss-description\">${description}</span>` : '',\n\t\t\t\t\t\thtml         = `${images}${icons}<span class=\"ss-text\">${option.text}${descriptions}</span>`;\n\n\t\t\t\t\tlet optionData = {\n\t\t\t\t\t\ttext: option.text,\n\t\t\t\t\t\tvalue: option.value,\n\t\t\t\t\t\thtml: html,\n\t\t\t\t\t\tselected: option.selected,\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\tmandatory: false,\n\t\t\t\t\t\tplaceholder: false,\n\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\tstyle: '',\n\t\t\t\t\t\tdata: {}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (option.parentElement.tagName === 'OPTGROUP') {\n\t\t\t\t\t\tconst optgroupLabel = option.parentElement.getAttribute('label');\n\t\t\t\t\t\tconst optgroup = acc.find(item => item.label === optgroupLabel);\n\t\t\t\t\t\tif (optgroup) {\n\t\t\t\t\t\t\toptgroup.options.push(optionData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tacc.push({\n\t\t\t\t\t\t\t\tlabel: optgroupLabel,\n\t\t\t\t\t\t\t\toptions: [optionData]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tacc.push(optionData);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, []),\n\t\t\t});\n\t\t} catch {\n\t\t\tconsole.error('The SlimSelect library is not connected');\n\t\t}\n\t});\n\n\t/**\n\t * Advanced drag & drop based on slimselect library.\n\t *\n\t * @see   https://github.com/bevacqua/dragula\n\t * @since 1.0\n\t */\n\tAlpine.directive(\n\t\t'media',\n\t\t(el, {expression}) => {\n\t\t\tconsole.log(el)\n\t\t\t//dragula([el]);\n\t\t}\n\t);\n\n\t/**\n\t * Custom fields builder.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data(\n\t\t'builder',\n\t\t() => ({\n\t\t\tdefault: {\n\t\t\t\tlocation: 'post',\n\t\t\t\toperator: '===',\n\t\t\t\tvalue: 'editor',\n\t\t\t},\n\t\t\tgroups: [\n\t\t\t\t{\n\t\t\t\t\trules: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlocation: 'post_status',\n\t\t\t\t\t\t\toperator: '!=',\n\t\t\t\t\t\t\tvalue: 'contributor',\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t],\n\t\t\taddGroup() {\n\t\t\t\tlet pattern = JSON.parse(JSON.stringify(this.default));\n\t\t\t\tthis.groups.push({\n\t\t\t\t\trules: [ pattern ]\n\t\t\t\t});\n\t\t\t},\n\t\t\tremoveGroup(index) {\n\t\t\t\tthis.groups.splice(index, 1);\n\t\t\t},\n\t\t\taddRule(key) {\n\t\t\t\tlet pattern = JSON.parse(JSON.stringify(this.default));\n\t\t\t\tthis.groups[key].rules.push(pattern);\n\t\t\t},\n\t\t\tremoveRule(key,index) {\n\t\t\t\tthis.groups[key].rules.splice(index, 1);\n\t\t\t},\n\t\t\tsubmit() {\n\t\t\t\tlet groups = JSON.parse(JSON.stringify(this.groups));\n\t\t\t\tconsole.log(groups);\n\t\t\t},\n\t\t})\n\t);\n\n\t/**\n\t * Sortable elements\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data( 'sortable', () => ( {\n\t\tinit() {\n\t\t\tlet nestedSortables = [].slice.call( document.querySelectorAll( '.sortable' ) );\n\t\t\tfor( let i = 0; i < nestedSortables.length; i++ ) {\n\t\t\t\tnew Sortable( nestedSortables[i], {\n\t\t\t\t\tmultiDrag: true,\n\t\t\t\t\tselectedClass: 'is-active',\n\t\t\t\t\tfallbackTolerance: 3,\n\t\t\t\t\tgroup: 'nested',\n\t\t\t\t\teasing: 'cubic-bezier(1, 0, 0, 1)',\n\t\t\t\t\tanimation: 100,\n\t\t\t\t\tfallbackOnBody: true,\n\t\t\t\t\tswapThreshold: 0.5,\n\t\t\t\t\tdataIdAttr: 'data-id',\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} ) );\n\n\t/**\n\t * Table checkbox\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data( 'table', () => ( {\n\t\tinit() {\n\t\t\tdocument.addEventListener( 'keydown', e => {\n\t\t\t\tlet key = window.event ? event : e;\n\t\t\t\tif ( !!key.shiftKey ) {\n\t\t\t\t\tthis.selection.shift = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tdocument.addEventListener( 'keyup', e => {\n\t\t\t\tlet key = window.event ? event : e;\n\t\t\t\tif ( !key.shiftKey ) {\n\t\t\t\t\tthis.selection.shift = false;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tselection: {\n\t\t\tbox: {},\n\t\t\tshift: false,\n\t\t\taddMore: true,\n\t\t},\n\t\titems: [],\n\t\ttrigger: {\n\t\t\t['@change']( e ) {\n\t\t\t\tlet inputs = document.querySelectorAll( 'input[name=\"item[]\"]' );\n\t\t\t\tif (inputs.length) {\n\t\t\t\t\tinputs.forEach(input => input.checked = e.target.checked);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tswitcher: {\n\t\t\t['@click']( e ) {\n\t\t\t\tlet checkboxes = document.querySelectorAll( 'input[name=\"item[]\"]' );\n\t\t\t\tlet nodeList   = Array.prototype.slice.call( document.getElementsByClassName( 'cb' ) );\n\n\t\t\t\tthis.selection.addMore = !!e.target.checked;\n\t\t\t\tif ( this.selection.shift ) {\n\t\t\t\t\tthis.selection.box[1] = nodeList.indexOf( e.target.parentNode );\n\n\t\t\t\t\tlet i = this.selection.box[0],\n\t\t\t\t\t\tx = this.selection.box[1];\n\n\t\t\t\t\tif ( i > x ) {\n\t\t\t\t\t\tfor ( ; x < i; x++ ) {\n\t\t\t\t\t\t\tcheckboxes[x].checked = this.selection.addMore;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( i < x ) {\n\t\t\t\t\t\tfor ( ; i < x; i++ ) {\n\t\t\t\t\t\t\tcheckboxes[i].checked = this.selection.addMore;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.selection.box[0] = undefined;\n\t\t\t\t\tthis.selection.box[1] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tthis.selection.box[0] = nodeList.indexOf( e.target.parentNode );\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t} ) )\n\n\t/**\n\t * Password\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.magic('password', () => {\n\t\treturn {\n\t\t\tmin: {\n\t\t\t\tlowercase: 2,\n\t\t\t\tuppercase: 2,\n\t\t\t\tspecial: 2,\n\t\t\t\tdigit: 2,\n\t\t\t\tlength: 12\n\t\t\t},\n\t\t\tvalid: {\n\t\t\t\tlowercase: false,\n\t\t\t\tuppercase: false,\n\t\t\t\tspecial: false,\n\t\t\t\tdigit: false,\n\t\t\t\tlength: false\n\t\t\t},\n\t\t\tcharsets: {\n\t\t\t\tlowercase: 'abcdefghijklmnopqrstuvwxyz',\n\t\t\t\tuppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\t\t\t\tspecial: '!@#$%^&*(){|}~',\n\t\t\t\tdigit: '0123456789'\n\t\t\t},\n\t\t\tswitch(value) {\n\t\t\t\treturn !(!!value);\n\t\t\t},\n\t\t\tcheck(value) {\n\t\t\t\tlet matchCount = 0;\n\t\t\t\tlet totalCount = 0;\n\n\t\t\t\tfor (const charset in this.charsets) {\n\t\t\t\t\tlet requiredCount = this.min[charset],\n\t\t\t\t\t\tcharsetRegex  = new RegExp(`[${this.charsets[charset]}]`, 'g'),\n\t\t\t\t\t\tcharsetCount  = (value.match(charsetRegex) || []).length;\n\t\t\t\t\tmatchCount += Math.min(charsetCount, requiredCount);\n\t\t\t\t\ttotalCount += requiredCount;\n\n\t\t\t\t\tthis.valid[charset] = charsetCount >= requiredCount;\n\t\t\t\t}\n\n\t\t\t\tif (value.length >= this.min.length) {\n\t\t\t\t\tmatchCount += 1;\n\t\t\t\t\ttotalCount += 1;\n\t\t\t\t\tthis.valid.length = value.length >= this.min.length;\n\t\t\t\t}\n\n\t\t\t\treturn Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tprogress: totalCount === 0 ? totalCount : (matchCount / totalCount) * 100,\n\t\t\t\t\t},\n\t\t\t\t\tthis.valid\n\t\t\t\t)\n\t\t\t},\n\t\t\tgenerate() {\n\t\t\t\tlet password = '';\n\t\t\t\tlet types = Object.keys(this.charsets);\n\n\t\t\t\ttypes.forEach(type => {\n\t\t\t\t\tlet count   = Math.max(this.min[type], 0),\n\t\t\t\t\t\tcharset = this.charsets[type];\n\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tlet randomIndex = Math.floor(Math.random() * charset.length);\n\t\t\t\t\t\tpassword += charset[randomIndex];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\twhile (password.length < this.min.length) {\n\t\t\t\t\tlet randomIndex = Math.floor(Math.random() * types.length),\n\t\t\t\t\t\tcharType    = types[randomIndex],\n\t\t\t\t\t\tcharset     = this.charsets[charType],\n\t\t\t\t\t\trandomCharIndex = Math.floor(Math.random() * charset.length);\n\t\t\t\t\tpassword += charset[randomCharIndex];\n\t\t\t\t}\n\t\t\t\tthis.check(password);\n\n\t\t\t\treturn this.shuffle(password);\n\t\t\t},\n\t\t\tshuffle(password) {\n\t\t\t\tlet array = password.split('');\n\t\t\t\tlet currentIndex = array.length;\n\t\t\t\tlet temporaryValue, randomIndex;\n\n\t\t\t\twhile (currentIndex !== 0) {\n\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\tcurrentIndex -= 1;\n\n\t\t\t\t\ttemporaryValue = array[currentIndex];\n\t\t\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\t\t\tarray[randomIndex] = temporaryValue;\n\t\t\t\t}\n\n\t\t\t\treturn array.join('');\n\t\t\t},\n\t\t}\n\t});\n\n\t/**\n\t * Counting time in four different units: seconds, minutes, hours and days.\n\t *\n\t * @since 1.0\n\t */\n\tAlpine.data( 'timer', ( endDate, startDate ) => ( {\n\t\tend: endDate, // format: '2021-31-12T14:58:31+00:00'\n\t\tday:  '00',\n\t\thour: '00',\n\t\tmin:  '00',\n\t\tsec:  '00',\n\t\tinit() {\n\t\t\tlet start = startDate || new Date().valueOf(),\n\t\t\t\tend   = new Date( this.end ).valueOf();\n\n\t\t\t// if the start date is earlier than the end date\n\t\t\tif( start < end ) {\n\t\t\t\t// number of seconds between two dates\n\t\t\t\tlet diff = Math.round( ( end - start ) / 1000 );\n\n\t\t\t\tlet t = this;\n\t\t\t\tsetInterval( function() {\n\t\t\t\t\tt.day  = ( '0' + parseInt( diff / ( 60 * 60 * 24 ), 10 ) ).slice(-2);\n\t\t\t\t\tt.hour = ( '0' + parseInt( ( diff / ( 60 * 60 ) ) % 24, 10 ) ).slice(-2);\n\t\t\t\t\tt.min  = ( '0' + parseInt( ( diff / 60 ) % 60, 10 ) ).slice(-2);\n\t\t\t\t\tt.sec  = ( '0' + parseInt( diff % 60, 10 ) ).slice(-2);\n\n\t\t\t\t\tif( --diff < 0 ) {\n\t\t\t\t\t\tt.days = t.hour = t.min = t.sec = '00';\n\t\t\t\t\t}\n\t\t\t\t}, 1000 );\n\t\t\t}\n\t\t},\n\t} ) );\n\n} );\n\n\n//# sourceURL=webpack://webpack-starter/./src/js/index.js?")}},__webpack_require__={r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}};__webpack_modules__["./src/js/index.js"](0,{},__webpack_require__);var __webpack_exports__={};__webpack_modules__["./src/scss/index.scss"](0,__webpack_exports__,__webpack_require__)})();