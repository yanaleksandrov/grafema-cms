import Area from"./area";const initMouse="mousedown",updateMouse="mousemove",endMouse="mouseup",initTouch="touchstart",updateTouch="touchmove",endTouch="touchend";class Selection{constructor(e){try{this.nodes=[],this.container=this.validateContainer(e.container||document.querySelector(".parent")),this.selector=this.validateSelector(e.selector||".child"),this.areaAttributes=e.areaAttributes||{id:"my-custom-area",class:""},this.touchable=e.touchable||"ontouchstart"in window||navigator.maxTouchPoints||!0,this.autostart=e.autostart||!0,this.onSelectEnd=e.onSelectEnd||null,this.classSelected="selected"}catch(e){throw e}this.autostart&&this.start()}validateContainer(e){if(!(e&&e instanceof HTMLElement))throw new Error('"container" attribute must be HTMLElement');return e}validateSelector(e){if(!e)throw new Error('"elements" attribute must be defined');if("string"==typeof e)return e;throw new Error('"elements" property must be a String')}start(){this.container.addEventListener(initMouse,this),this.container.addEventListener("mousemove",this),this.container.addEventListener(endMouse,this),this.touchable&&(this.container.addEventListener(initTouch,this),this.container.addEventListener("touchmove",this),this.container.addEventListener(endTouch,this))}stop(){this.container.removeEventListener(initMouse,this),this.container.removeEventListener("mousemove",this),this.container.removeEventListener(endMouse,this),this.touchable&&(this.container.removeEventListener(initTouch,this),this.container.removeEventListener("touchmove",this),this.container.removeEventListener(endTouch,this))}handleEvent(e){e.preventDefault();let t=this.touchable&&e.targetTouches&&e.targetTouches.length?e.targetTouches[0]:e,[s,i]=[t.pageX,t.pageY];switch(e.type){case initMouse:case initTouch:this.init(s,i);break;case"mousemove":case"touchmove":this.update(s,i);break;case endMouse:case endTouch:this.end(s,i)}}init(e,t){this.selected=[],this.area=new Area(this.areaAttributes,e,t),this.area.instance(this.container)}update(e,t){this.area&&(Array.from(this.container.querySelectorAll(this.selector)).forEach((e=>{this.nodes.includes(e)||(this.area.isOver(e)?e.classList.add(this.classSelected):e.classList.remove(this.classSelected))})),this.area.resize(e,t),this.area.move(e,t))}end(){if(this.area){let e=Array.from(this.container.querySelectorAll(this.selector));this.selected=e.filter((e=>this.area.isOver(e)&&-1===this.selected.indexOf(e))),this.nodes=this.nodes.concat(this.selected.filter((e=>!this.nodes.includes(e)))),this.selected.forEach((e=>{e.classList.contains(this.classSelected)||e.classList.add(this.classSelected)})),this.area.destroy(),this.area=null,"function"==typeof this.onSelectEnd&&this.onSelectEnd(this)}}}export default Selection;